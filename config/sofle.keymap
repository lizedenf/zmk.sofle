#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    media-playback:

    media-playback {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&kp C_FF>, <&kp C_RW>;

        label = "MEDIA-PLAYBACK";
    };

    media-playback:

    combos {
        compatible = "zmk,combos";

        Caps {
            bindings = <&kp CAPS>;
            key-positions = <27 28>;
        };

        Tab-SD {
            bindings = <&kp TAB>;
            key-positions = <28 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1                  &kp N2        &kp N3       &kp N4           &kp N5         &kp UP_ARROW     &kp N6       &kp N7        &kp N8       &kp N9           &kp N0                   &kp BACKSPACE
&kp TAB     &kp Q                   &kp W         &kp E        &kp R            &kp T          &kp DOWN_ARROW   &kp Y        &kp U         &kp I        &kp O            &kp P                    &kp BSLH
&kp TILDE   &mt LEFT_GUI A          &mt LALT S    &mt LCTRL D  &mt LSHFT F      &kp G          &kp LEFT_ARROW   &kp H        &mt LSHFT J   &mt LCTRL K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMICOLON  &kp APOS
&kp LSHFT   &kp Z                   &kp X         &kp C        &kp V            &kp B          &kp RIGHT_ARROW  &kp N        &kp M         &kp COMMA    &kp PERIOD       &kp FSLH                 &kp ENTER
&kp C_MUTE  &mt LEFT_ALT RG(LS(S))  &kp LEFT_GUI  &mo 1        &lt 2 BACKSPACE  &lt 1 SPACE    &kp ENTER        &lt 1 ENTER  &lt 2 DELETE  &lt 3 HOME   &lt 4 END        &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        nav-num {
            bindings = <
&kp GRAVE   &kp F1          &kp F2          &kp F3           &kp F4     &kp F5       &mmv MOVE_UP     &kp F6      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans      &kp GRAVE       &kp UP_ARROW    &trans           &kp PG_UP  &mkp MB4     &mmv MOVE_DOWN   &kp PG_UP   &kp KP_NUMBER_7   &kp KP_NUMBER_8    &kp KP_NUMBER_9       &kp PLUS               &kp EQUAL
&trans      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PG_DN  &mkp MB5     &mmv MOVE_LEFT   &kp DOLLAR  &kp KP_NUMBER_4   &kp KP_NUMBER_5    &kp KP_NUMBER_6       &kp MINUS              &kp RIGHT_BRACKET
&trans      &mkp LCLK       &trans          &trans           &trans     &trans       &mmv MOVE_RIGHT  &kp SLASH   &kp KP_NUMBER_1   &kp KP_NUMBER_2    &kp KP_NUMBER_3       &kp EQUAL              &trans
&kp C_MUTE  &trans          &trans          &mkp LCLK        &mkp MCLK  &mkp RCLK    &mkp LCLK        &kp PERIOD  &kp COLON         &kp KP_NUMBER_0    &trans                &trans
            >;

            display-name = "num";
            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        bt-rgb-media {
            bindings = <
&kp TILDE        &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4    &kp C_FAST_FORWARD  &trans  &kp F10  &kp F11  &kp F12  &trans       &trans
&trans           &bt BT_CLR       &bt BT_CLR_ALL   &trans           &trans        &trans          &kp C_RW            &trans  &kp F7   &kp F8   &kp F9   &kp UNDER    &kp PLUS
&trans           &out OUT_USB     &out OUT_BLE     &trans           &trans        &trans          &kp C_PREV          &trans  &kp F4   &kp F5   &kp F6   &kp LBRC     &kp RBRC
&trans           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &trans        &trans          &kp C_NEXT          &trans  &kp F1   &kp F2   &kp F3   &bootloader  &trans
&rgb_ug RGB_BRI  &trans           &trans           &trans           &trans        &trans          &kp C_PLAY_PAUSE    &trans  &trans   &trans   &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_FF C_RW>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
